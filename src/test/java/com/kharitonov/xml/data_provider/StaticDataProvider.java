package com.kharitonov.xml.data_provider;

import com.kharitonov.xml.entity.*;
import org.apache.commons.collections4.MultiValuedMap;
import org.apache.commons.collections4.multimap.ArrayListValuedHashMap;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;

public class StaticDataProvider {
    public static final String XML_FILE_PATH = "input/deviceStore.xml";
    public static final String WRONG_FILE_PATH = "tratata.xml";
    public static final List<Device> PARSED_LIST;
    public static final MultiValuedMap<String, String> KEYBOARD_MAP;
    public static final MultiValuedMap<String, String> MONITOR_MAP;
    public static final MultiValuedMap<String, String> PROCESSOR_MAP;
    public static final Processor BUILT_PROCESSOR;
    public static final Monitor BUILT_MONITOR;
    public static final Keyboard BUILT_KEYBOARD;

    static {
        Monitor monitor;
        Keyboard keyboard;
        Processor processor;
        Calendar calendar;
        PARSED_LIST = new ArrayList<>();
        keyboard = new Keyboard();
        keyboard.setId("keyboard1");
        calendar = Calendar.getInstance();
        calendar.set(2019, 2, 2);
        keyboard.setManufactureDate(calendar);
        keyboard.setManufacturer("Logitech");
        keyboard.setModel("G102");
        keyboard.setPrice(100);
        keyboard.setLighting(true);
        keyboard.setKeys(155);
        PARSED_LIST.add(keyboard);
        monitor = new Monitor();
        monitor.setId("monitor1");
        monitor.setResolution("2K");
        monitor.setSerial("C2H5OH");
        monitor.setManufacturer("LG");
        monitor.setModel("W241E02H23");
        monitor.setPrice(322.5);
        monitor.setDiagonal(24);
        monitor.setMatrix(Matrix.TN_FILM);
        monitor.setCurved(true);
        monitor.addConnection(ConnectionInterface.HDMI);
        monitor.addConnection(ConnectionInterface.DVI);
        monitor.addConnection(ConnectionInterface.VGA);
        PARSED_LIST.add(monitor);
        processor = new Processor();
        processor.setId("processor1");
        calendar = Calendar.getInstance();
        calendar.set(2013, 5, 1);
        processor.setManufactureDate(calendar);
        processor.setManufacturer("Intel");
        processor.setModel("core i5");
        processor.setPrice(250);
        processor.setFrequency(1231);
        processor.setCores(6);
        PARSED_LIST.add(processor);
        keyboard = new Keyboard();
        keyboard.setId("keyboard2");
        calendar = Calendar.getInstance();
        calendar.set(2020, 2, 1);
        keyboard.setManufactureDate(calendar);
        keyboard.setSerial("C4H7OH2");
        keyboard.setManufacturer("SteelSeries");
        keyboard.setModel("Apex 3");
        keyboard.setPrice(263.86);
        keyboard.setLighting(true);
        keyboard.setKeys(125);
        PARSED_LIST.add(keyboard);
        monitor = new Monitor();
        monitor.setId("monitor2");
        monitor.setManufacturer("Dell");
        monitor.setModel("U2412M");
        monitor.setPrice(439.3);
        monitor.setDiagonal(24);
        monitor.setMatrix(Matrix.IPS);
        monitor.setCurved(false);
        monitor.addConnection(ConnectionInterface.DVI);
        monitor.addConnection(ConnectionInterface.VGA);
        PARSED_LIST.add(monitor);
        processor = new Processor();
        processor.setId("processor2");
        calendar = Calendar.getInstance();
        calendar.set(2017, 8, 1);
        processor.setManufactureDate(calendar);
        processor.setManufacturer("Amd");
        processor.setModel("Ryzen 5 1600");
        processor.setPrice(298.91);
        processor.setFrequency(3600);
        processor.setCores(6);
        PARSED_LIST.add(processor);
        keyboard = new Keyboard();
        keyboard.setId("keyboard3");
        keyboard.setSerial("C5H8OH3");
        keyboard.setManufacturer("Defender");
        keyboard.setModel("Chimera GK-280DL");
        keyboard.setPrice(35.73);
        keyboard.setLighting(true);
        keyboard.setKeys(120);
        PARSED_LIST.add(keyboard);
        monitor = new Monitor();
        monitor.setId("monitor3");
        calendar = Calendar.getInstance();
        calendar.set(2019, 12, 1);
        monitor.setManufactureDate(calendar);
        monitor.setResolution("2K");
        monitor.setSerial("C2H4");
        monitor.setManufacturer("LG");
        monitor.setModel("27GL850-B");
        monitor.setPrice(1251.14);
        monitor.setDiagonal(27);
        monitor.setMatrix(Matrix.IPS);
        monitor.setCurved(false);
        monitor.addConnection(ConnectionInterface.HDMI);
        monitor.addConnection(ConnectionInterface.DISPLAY_PORT);
        PARSED_LIST.add(monitor);
        processor = new Processor();
        processor.setId("processor3");
        calendar = Calendar.getInstance();
        calendar.set(2017, 8, 8);
        processor.setManufactureDate(calendar);
        processor.setSerial("C13O15H18");
        processor.setManufacturer("Amd");
        processor.setModel("Ryzen 7 2700");
        processor.setPrice(437.55);
        processor.setFrequency(4100);
        processor.setCores(8);
        PARSED_LIST.add(processor);
        keyboard = new Keyboard();
        keyboard.setId("keyboard4");
        calendar = Calendar.getInstance();
        calendar.set(2017, 8, 1);
        keyboard.setManufactureDate(calendar);
        keyboard.setSerial("C9H9O9");
        keyboard.setManufacturer("Redragon");
        keyboard.setModel("Mitra");
        keyboard.setPrice(99.9);
        keyboard.setLighting(true);
        keyboard.setKeys(103);
        PARSED_LIST.add(keyboard);
        monitor = new Monitor();
        monitor.setId("monitor4");
        calendar = Calendar.getInstance();
        calendar.set(2013, 1, 1);
        monitor.setManufactureDate(calendar);
        monitor.setResolution("HD");
        monitor.setManufacturer("AOC");
        monitor.setModel("e970Swn");
        monitor.setPrice(146.78);
        monitor.setDiagonal(18.5);
        monitor.setMatrix(Matrix.TN_FILM);
        monitor.setCurved(false);
        monitor.addConnection(ConnectionInterface.VGA);
        PARSED_LIST.add(monitor);
        processor = new Processor();
        processor.setId("processor4");
        calendar = Calendar.getInstance();
        calendar.set(2010, 3, 1);
        processor.setManufactureDate(calendar);
        processor.setSerial("C1H1O1");
        processor.setManufacturer("AMD");
        processor.setModel("Sempron LE-1100");
        processor.setPrice(13.3);
        processor.setFrequency(1900);
        processor.setCores(1);
        PARSED_LIST.add(processor);
        keyboard = new Keyboard();
        keyboard.setId("keyboard5");
        keyboard.setSerial("C4H5O6");
        keyboard.setManufacturer("Defender");
        keyboard.setModel("Element HB-190 USB RU");
        keyboard.setPrice(8.09);
        keyboard.setLighting(false);
        keyboard.setKeys(110);
        PARSED_LIST.add(keyboard);
        monitor = new Monitor();
        monitor.setId("monitor5");
        monitor.setResolution("4K");
        monitor.setManufacturer("Samsung");
        monitor.setModel("U32R590CWI");
        monitor.setPrice(962.63);
        monitor.setDiagonal(32);
        monitor.setMatrix(Matrix.VA);
        monitor.setCurved(true);
        monitor.addConnection(ConnectionInterface.HDMI);
        monitor.addConnection(ConnectionInterface.DISPLAY_PORT);
        PARSED_LIST.add(monitor);
        processor = new Processor();
        processor.setId("processor5");
        calendar = Calendar.getInstance();
        calendar.set(2020, 6, 1);
        processor.setManufactureDate(calendar);
        processor.setSerial("C3H2O1");
        processor.setManufacturer("Intel");
        processor.setModel("Xeon Gold 6258R");
        processor.setPrice(16598.56);
        processor.setFrequency(4000);
        processor.setCores(28);
        PARSED_LIST.add(processor);
        keyboard = new Keyboard();
        keyboard.setId("keyboard6");
        keyboard.setSerial("C111H73OH22");
        keyboard.setManufacturer("HyperX");
        keyboard.setModel("Alloy FPS Pro");
        keyboard.setPrice(270.84);
        keyboard.setLighting(true);
        keyboard.setKeys(120);
        PARSED_LIST.add(keyboard);
        monitor = new Monitor();
        monitor.setId("monitor6");
        calendar = Calendar.getInstance();
        calendar.set(2018, 5, 1);
        monitor.setManufactureDate(calendar);
        monitor.setManufacturer("LG");
        monitor.setModel("32UK550-B");
        monitor.setPrice(995.07);
        monitor.setDiagonal(31.5);
        monitor.setMatrix(Matrix.VA);
        monitor.setCurved(false);
        monitor.addConnection(ConnectionInterface.HDMI);
        monitor.addConnection(ConnectionInterface.DISPLAY_PORT);
        PARSED_LIST.add(monitor);
        processor = new Processor();
        processor.setId("processor6");
        calendar = Calendar.getInstance();
        calendar.set(2017, 8, 1);
        processor.setManufactureDate(calendar);
        processor.setSerial("C19H29O39");
        processor.setManufacturer("Amd");
        processor.setModel("Ryzen 5 1600");
        processor.setPrice(298.91);
        processor.setFrequency(3600);
        processor.setCores(6);
        PARSED_LIST.add(processor);
    }

    static {
        KEYBOARD_MAP = new ArrayListValuedHashMap<>();
        KEYBOARD_MAP.put("id", "keyboard6");
        KEYBOARD_MAP.put("serial", "C111H73OH22");
        KEYBOARD_MAP.put("manufacturer", "HyperX");
        KEYBOARD_MAP.put("model", "Alloy FPS Pro");
        KEYBOARD_MAP.put("price", "270.84");
        KEYBOARD_MAP.put("lighting", "true");
        KEYBOARD_MAP.put("keys", "120");
    }

    static {
        MONITOR_MAP = new ArrayListValuedHashMap<>();
        MONITOR_MAP.put("id", "monitor6");
        MONITOR_MAP.put("manufactureDate", "2018-05-01");
        MONITOR_MAP.put("manufacturer", "LG");
        MONITOR_MAP.put("model", "32UK550-B");
        MONITOR_MAP.put("price", "995.07");
        MONITOR_MAP.put("diagonal", "31.5");
        MONITOR_MAP.put("matrix", "VA");
        MONITOR_MAP.put("curved", "false");
        MONITOR_MAP.put("connection", "HDMI");
        MONITOR_MAP.put("connection", "DISPLAY_PORT");
    }

    static {
        PROCESSOR_MAP = new ArrayListValuedHashMap<>();
        PROCESSOR_MAP.put("id", "processor6");
        PROCESSOR_MAP.put("manufactureDate", "2017-08-01");
        PROCESSOR_MAP.put("serial", "C19H29O39");
        PROCESSOR_MAP.put("manufacturer", "Amd");
        PROCESSOR_MAP.put("model", "Ryzen 5 1600");
        PROCESSOR_MAP.put("price", "298.91");
        PROCESSOR_MAP.put("frequency", "3600");
        PROCESSOR_MAP.put("cores", "6");
    }

    static {
        BUILT_KEYBOARD = new Keyboard();
        BUILT_KEYBOARD.setId("keyboard6");
        BUILT_KEYBOARD.setSerial("C111H73OH22");
        BUILT_KEYBOARD.setManufacturer("HyperX");
        BUILT_KEYBOARD.setModel("Alloy FPS Pro");
        BUILT_KEYBOARD.setPrice(270.84);
        BUILT_KEYBOARD.setLighting(true);
        BUILT_KEYBOARD.setKeys(120);
    }

    static {
        Calendar calendar = Calendar.getInstance();
        BUILT_MONITOR = new Monitor();
        BUILT_MONITOR.setId("monitor6");
        calendar.set(2018, 5, 1);
        BUILT_MONITOR.setManufactureDate(calendar);
        BUILT_MONITOR.setManufacturer("LG");
        BUILT_MONITOR.setModel("32UK550-B");
        BUILT_MONITOR.setPrice(995.07);
        BUILT_MONITOR.setDiagonal(31.5);
        BUILT_MONITOR.setMatrix(Matrix.VA);
        BUILT_MONITOR.setCurved(false);
        BUILT_MONITOR.addConnection(ConnectionInterface.HDMI);
        BUILT_MONITOR.addConnection(ConnectionInterface.DISPLAY_PORT);
    }

    static {
        Calendar calendar = Calendar.getInstance();
        BUILT_PROCESSOR = new Processor();
        BUILT_PROCESSOR.setId("processor6");
        calendar.set(2017, 8, 1);
        BUILT_PROCESSOR.setManufactureDate(calendar);
        BUILT_PROCESSOR.setSerial("C19H29O39");
        BUILT_PROCESSOR.setManufacturer("Amd");
        BUILT_PROCESSOR.setModel("Ryzen 5 1600");
        BUILT_PROCESSOR.setPrice(298.91);
        BUILT_PROCESSOR.setFrequency(3600);
        BUILT_PROCESSOR.setCores(6);
    }

    private StaticDataProvider() {

    }
}
